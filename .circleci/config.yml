version: 2.1

scala_212: &scala_212
  SCALA_VERSION: 2.12.10
  SBT_VERSION: 1.3.13

scala_213: &scala_213
  SCALA_VERSION: 2.13.1
  SBT_VERSION: 1.3.13

jdk_8: &jdk_8
  JDK_VERSION: 8

machine_ubuntu: &machine_ubuntu
  machine:
    image: ubuntu-1604:201903-01

load_cache: &load_cache
  - restore_cache:
      key: sbt-cache

clean_cache: &clean_cache
  - run:
      name: Clean unwanted files from cache
      command: |
        rm -fv $HOME/.ivy2/.sbt.ivy.lock
        find $HOME/.ivy2/cache -name "ivydata-*.properties" -print -delete
        find $HOME/.sbt        -name "*.lock"               -print -delete

save_cache: &save_cache
  - save_cache:
      key: sbt-cache
      paths:
        - "~/.ivy2/cache"
        - "~/.sbt"
        - "~/.m2"
        - "~/.cache"

install_nodejs: &install_nodejs
  - run:
      name: Install node.js
      command: |
        export NVM_DIR="/opt/circleci/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        nvm install
        nvm use
        node -v

filter_tags: &filter_tags
  tags:
    only: /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/

testJVM: &testJVM
  steps:
    - checkout
    - <<: *load_cache
    - <<: *install_jdk
    - <<: *install_sbt
    - run:
        name: Run tests
        command: sbt -Dfatal.warnings=true ++${SCALA_VERSION}! testJVM
    - <<: *clean_cache
    - <<: *save_cache

testJS: &testJS
  steps:
    - checkout
    - <<: *load_cache
    - <<: *install_jdk
    - <<: *install_sbt
    - <<: *install_nodejs
    - run:
        name: Run tests
        command: sbt -Dfatal.warnings=true ++${SCALA_VERSION}! testJS
    - <<: *clean_cache
    - <<: *save_cache

release: &release
  steps:
    - checkout
    - run:
        name: Fetch git tags
        command: git fetch --tags
    - <<: *load_cache
    - run: 
        name: Write sonatype credentials
        command: echo "credentials += Credentials(\"Sonatype Nexus Repository Manager\", \"oss.sonatype.org\", \"${SONATYPE_USER}\", \"${SONATYPE_PASSWORD}\")" > ~/.sbt/1.0/sonatype.sbt
    - run:
        name: Write PGP public key
        command: echo -n "${PGP_PUBLIC}" | base64 -di > /tmp/public.asc
    - run:
        name: Write PGP secret key
        command: echo -n "${PGP_SECRET}" | base64 -di > /tmp/secret.asc
    - run:
        name: Release artifacts
        command: |
          mkdir -p $HOME/bin
          sudo apt-get update && sudo apt-get -y install gnupg2
          echo pinentry-mode loopback >> ~/.gnupg/gpg.conf
          echo allow-loopback-pinentry >> ~/.gnupg/gpg-agent.conf
          chmod 600 ~/.gnupg/*
          ln -s /usr/bin/gpg2 $HOME/bin/gpg
          $HOME/bin/gpg --version
          echo RELOADAGENT | gpg-connect-agent
          echo $PGP_SECRET | base64 -di | gpg2 --import --no-tty --batch --yes
          PATH=$HOME/bin:$PATH sbt ++${SCALA_VERSION}! ci-release

jobs:
  test_212_jdk8_jvm:
    <<: *testJVM
    <<: *machine_ubuntu
    docker:
      - image: eed3si9n/sbt
    environment:
      - <<: *scala_212
      - <<: *jdk_8

  test_213_jdk8_jvm:
    <<: *testJVM
    <<: *machine_ubuntu
    docker:
      - image: eed3si9n/sbt
    environment:
      - <<: *scala_213
      - <<: *jdk_8

  test_212_jdk8_js:
    <<: *testJS
    <<: *machine_ubuntu
    docker:
      - image: eed3si9n/sbt
    environment:
      - <<: *scala_212
      - <<: *jdk_8

  test_213_jdk8_js:
    <<: *testJS
    <<: *machine_ubuntu
    docker:
      - image: eed3si9n/sbt
    environment:
      - <<: *scala_213
      - <<: *jdk_8

  release:
    <<: *release
    <<: *machine_ubuntu
    docker:
      - image: eed3si9n/sbt
    environment:
      - <<: *scala_213
      - <<: *jdk_8

workflows:
  version: 2
  build:
    jobs:
      - test_212_jdk8_jvm:
          filters:
            <<: *filter_tags
      - test_213_jdk8_jvm:
          filters:
            <<: *filter_tags
      - test_212_jdk8_js:
          filters:
            <<: *filter_tags
      - test_213_jdk8_js:
          filters:
            <<: *filter_tags
      - release:
          context: Sonatype
          requires:
            - test_212_jdk8_jvm
            - test_212_jdk8_js
            - test_213_jdk8_jvm
            - test_213_jdk8_js
          filters:
            <<: *filter_tags
            branches:
              only:
                - master
